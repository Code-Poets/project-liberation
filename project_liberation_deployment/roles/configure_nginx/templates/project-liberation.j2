limit_req_zone $binary_remote_addr zone=ip_req_limit:10m rate={{ nginx.limit_of_requests_per_second }}r/s;
limit_conn_zone $binary_remote_addr zone=ip_connection_limit:10m;

# Disable sending the nginx version in error pages and server header
server_tokens off;

# Include shared security headers
include /etc/nginx/snippets/shared-security-headers.conf;

# Restricting access based on country
geoip_country /usr/share/GeoIP/GeoIP.dat;
map $geoip_country_code $country_access {
    "IN"    1;
    default 0;
}

server {
    server_name codepoets.it www.codepoets.it;

    if ($country_access = '1') {
        return 403;
    }
    if ($host = www.codepoets.it) {
        return 301 https://codepoets.it$request_uri;
    }


    error_page 500 501 502 503 504 505 506 507 508 510 511 /500.html;
    error_page 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 421 422 423 424 425 426 428 429 431 451 /404.html;

    location = /500.html {
       root /var/www/html/;
       internal;
    }

    location = /404.html {
       root /var/www/html/;
       internal;
    }

    proxy_intercept_errors on;

    location = /favicon.ico {
        alias {{ nginx_static_files_dir }}/favicon.ico;
    }

    location / {
        limit_req  zone=ip_req_limit   burst={{ nginx.number_of_requests_stored_in_queue }} nodelay;
        limit_conn ip_connection_limit {{ nginx.number_of_open_connections_per_client }};
        limit_req_status 444;

        set              $project_liberation_backend  http://127.0.0.1:8000;
        proxy_set_header x-real-ip                    $remote_addr;
        proxy_set_header x-forwarded-for              $remote_addr;
        proxy_set_header host                         $http_host;
        proxy_pass                                    $project_liberation_backend;

        # Configuration of proxy buffer
        proxy_buffering        on;
        proxy_buffer_size      8k;
        proxy_buffers          8 32k;

    }

    location /admin/ {

        limit_req    zone=ip_req_limit   burst={{ nginx.number_of_requests_stored_in_queue }} nodelay;
        limit_conn   ip_connection_limit {{ nginx.number_of_open_connections_per_client }};
        limit_req_status 444;

        set              $project_liberation_backend  http://127.0.0.1:8000;
        proxy_set_header x-real-ip                    $remote_addr;
        proxy_set_header x-forwarded-for              $remote_addr;
        proxy_set_header host                         $http_host;
        proxy_pass                                    $project_liberation_backend;

        client_max_body_size "100m";
    }

    location /download-image-package/ {
        limit_conn ip_connection_limit 1;
        limit_rate 2m;
        limit_except GET { deny all; }
        alias        {{ image_package_dir }}/;
    }

    location /static/ {
        expires     1y;
        add_header  Cache-Control "public";

        # Include shared security headers
        include /etc/nginx/snippets/shared-security-headers.conf;

        alias {{ django_static_files_dir }}/;
    }

    location /nginx-static/ {
        expires     1y;
        add_header  Cache-Control "public";

        # Include shared security headers
        include /etc/nginx/snippets/shared-security-headers.conf;

        alias {{ nginx_static_files_dir }}/;
    }

    location /media/ {
        alias {{ media_files_dir }}/;
    }

	listen [::]:443 ssl ipv6only=on default_server;
	listen 443 ssl default_server;

	ssl_certificate {{ certificates_dir }}/ssl_certificate.pem;
	ssl_certificate_key {{ certificates_dir }}/certificate-privkey.pem;
	ssl_trusted_certificate {{ certificates_dir }}/ssl_trusted_certificate.pem;

	ssl_session_cache shared:le_nginx_SSL:1m;
	ssl_session_timeout 1440m;

	ssl_protocols TLSv1.2 TLSv1.3;
	ssl_prefer_server_ciphers on;

	ssl_ciphers "TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES256-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES128-SHA:RSA-PSK-AES256-GCM-SHA384:DHE-PSK-AES256-GCM-SHA384:RSA-PSK-CHACHA20-POLY1305:DHE-PSK-CHACHA20-POLY1305:ECDHE-PSK-CHACHA20-POLY1305:AES256-GCM-SHA384:PSK-AES256-GCM-SHA384:PSK-CHACHA20-POLY1305:RSA-PSK-AES128-GCM-SHA256:DHE-PSK-AES128-GCM-SHA256:AES128-GCM-SHA256:PSK-AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:ECDHE-PSK-AES256-CBC-SHA384:ECDHE-PSK-AES256-CBC-SHA:SRP-RSA-AES-256-CBC-SHA:SRP-AES-256-CBC-SHA:RSA-PSK-AES256-CBC-SHA384:DHE-PSK-AES256-CBC-SHA384:RSA-PSK-AES256-CBC-SHA:DHE-PSK-AES256-CBC-SHA:AES256-SHA:PSK-AES256-CBC-SHA384:PSK-AES256-CBC-SHA:ECDHE-PSK-AES128-CBC-SHA256:ECDHE-PSK-AES128-CBC-SHA:SRP-RSA-AES-128-CBC-SHA:SRP-AES-128-CBC-SHA:RSA-PSK-AES128-CBC-SHA256:DHE-PSK-AES128-CBC-SHA256:RSA-PSK-AES128-CBC-SHA:DHE-PSK-AES128-CBC-SHA:AES128-SHA:PSK-AES128-CBC-SHA256:PSK-AES128-CBC-SHA";
	ssl_dhparam {{ certificates_dir }}/ssl-dhparams.pem;

    include /etc/nginx/snippets/configuration-of-compression-timeouts-and-sizes.conf;

}

server {
    if ($country_access = '1') {
        return 403;
    }
    if ($host = codepoets.it) {
        return 301 https://codepoets.it$request_uri;
    }
    if ($host = www.codepoets.it) {
        return 301 https://codepoets.it$request_uri;
    }

    listen           80 default_server;
    listen      [::]:80 default_server;
    server_name codepoets.it www.codepoets.it;

    return 404;

}
